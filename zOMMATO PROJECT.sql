create database Zommato;                               
USE ZOMMATO;

DROP TABLE IF EXISTS GOLDUSERS_SIGNUP;
CREATE TABLE GOLDUSERS_SIGNUP(USER_ID INT NOT NULL
							,GOLD_SIGNUP_DATE DATE NOT NULL);
                            
                            

INSERT INTO goldusers_signup VALUES (1,'2017-09-22'),
									(3,'2017-04-21');
                                    
                                    

# 2) table 2

CREATE TABLE USERS(USER_ID INT,SINGUP_DATE DATE);

INSERT INTO USERS VALUES(1,"2014-09-02"),
						(2,"2015-01-15"),
                        (3,"2014-04-11");
                        
                        
# 3) TABLE 3

CREATE TABLE SALES(USER_ID INT, CREATED_DATE DATE, PRODUCT_ID INT);

INSERT INTO SALES(USER_ID,CREATED_DATE,PRODUCT_ID) 
 VALUES (1,'2017-04-19',2),
 (3,'2019-12-18',1),(2,'2020-07-20',3),
 (1,'2019-10-23',2),(1,'2018-03-19',3),
 (3,'2016-12-20',2),(1,'2016-11-09',1),
 (1,'2016-05-20',3),(2,'2017-09-24',1),
 (1,'2017-03-11',2),(1,'2016-03-11',1),
 (3,'2016-11-10',1),(3,'2017-12-07',2),
 (3,'2016-12-15',2),(2,'2017-11-8',2),(2,'2018-09-10',3);


# 4) TABLE

CREATE TABLE product(product_id integer,product_name text,price integer); 
INSERT INTO product(product_id,product_name,price) 
 VALUES
(1,'p1',980),
(2,'p2',870),
(3,'p3',330);


-- Q1) WHAT IS THE TOTAL AMOUNT  EACH CUSTOMER SPENT ON ZOMMATO?

SELECT A.USER_ID, SUM(B.PRICE )
FROM SALES A INNER JOIN  PRODUCT B  ON A.PRODUCT_ID = B.PRODUCT_ID
GROUP BY USER_ID;


-- Q2) HOW MANY DAYS HAS EACH CUSTOMER VISITED ZOMMATO?

SELECT USER_ID , COUNT(DISTINCT (CREATED_DATE)) 
FROM SALES 
GROUP BY USER_ID;



-- Q3) WHAT WAS THE FIRST PRODUCT PURCHASED BY EACH CUSTOMER?

WITH CTE AS(SELECT * , 
			RANK() OVER(PARTITION BY USER_ID ORDER BY CREATED_DATE ) AS RNK 
			FROM SALES) 
            SELECT * FROM CTE WHERE RNK < 2;
            
            
            
-- Q4) What is the most purchased item on then menu and how many times was  it purchased  by all customers?

SELECT USER_ID, PRODUCT_ID, COUNT(PRODUCT_ID) FROM SALES WHERE PRODUCT_ID = 
(SELECT  PRODUCT_ID  FROM SALES 
GROUP BY PRODUCT_ID 
ORDER BY COUNT(PRODUCT_ID) DESC LIMIT 1) 
GROUP BY USER_ID;



-- Q5) WHICH ITEM WAS THE MOST POPULAR FOR EACH CUSTOMER?

WITH CTE AS (SELECT * , RANK() OVER(PARTITION BY USER_ID ORDER BY CNT DESC) RNK FROM 
(SELECT USER_ID ,PRODUCT_ID, COUNT(PRODUCT_ID) CNT
 FROM SALES
 GROUP BY PRODUCT_ID,USER_ID) A)
 SELECT * FROM CTE WHERE RNK = 1;
 
 
 -- Q6) WHICH ITEM WAS PURCHASED FIRST BY THE CUSTOMER AFTER THEY BECAOME MEMBER?
 
 WITH CTE AS (SELECT * ,RANK() OVER(PARTITION BY USER_ID ORDER BY CREATED_DATE) RNK FROM 
			 (SELECT A.USER_ID,A.CREATED_DATE,A.PRODUCT_ID, B.GOLD_SIGNUP_DATE
			  FROM SALES A INNER JOIN GOLDUSERS_SIGNUP B ON A.USER_ID = B.USER_ID 
              WHERE CREATED_DATE >= GOLD_SIGNUP_DATE )C)
 SELECT * FROM CTE WHERE RNK = 1;
 
 
 
 -- Q7) Which item was purchased just before the customer became member?
 
WITH CTE AS (SELECT *, RANK() OVER(PARTITION BY USER_ID ORDER BY CREATED_DATE DESC) RNK FROM
			(SELECT A.USER_ID , A.CREATED_DATE, A.PRODUCT_ID , B.GOLD_SIGNUP_DATE
			FROM SALES A INNER JOIN GOLDUSERS_SIGNUP B ON A.USER_ID = B.USER_ID 
			WHERE CREATED_DATE < GOLD_SIGNUP_DATE) C)
 SELECT * FROM CTE WHERE RNK = 1;
 
 
 -- Q8) What is the total orders and amount spent for each member before they became a member?
 
SELECT USER_ID,COUNT(CREATED_DATE),SUM(PRICE) FROM
	(SELECT C.*, D.PRICE FROM
	(SELECT A.USER_ID,A.PRODUCT_ID,A.CREATED_DATE,B.GOLD_SIGNUP_DATE
	FROM SALES A INNER JOIN GOLDUSERS_SIGNUP B ON A.USER_ID = B.USER_ID
	AND CREATED_DATE <= GOLD_SIGNUP_DATE)C INNER JOIN PRODUCT D ON C.PRODUCT_ID = D.PRODUCT_ID) E
GROUP BY USER;



/* Q9)If buying each product geneartes points for eg 5rs = 2 zommato point and each product had different purchasing points for eg for p1	5rs =1  zomato point, 
for p2 10 rs = 5zomato point? Also Calculate points collected by each customers and for which product most points have been given till now*/

# fIRST PART: THIS ANSWER ON THE BASIS OF TOTAL POINT EARNED  AS PER USER_ID

WITH CTE AS
	(WITH CTE AS 
			(SELECT D.*, CASE WHEN PRODUCT_ID = 1 THEN 5 WHEN PRODUCT_ID = 2 THEN 2 WHEN PRODUCT_ID = 3 THEN 5 ELSE 0 END AS POINTS FROM
			(SELECT C.USER_ID,C.PRODUCT_ID,SUM(PRICE) AMT FROM
				(SELECT A.*,B.PRICE FROM SALES A INNER JOIN PRODUCT B ON A.PRODUCT_ID = B.PRODUCT_ID) C 
			GROUP BY USER_ID,PRODUCT_ID) D)
	SELECT *,ROUND(AMT/POINTS) TOTAL_POINTS FROM CTE)
SELECT USER_ID,SUM(TOTAL_POINTS) TOTAL_POINTS_EARNED FROM CTE GROUP BY USER_ID;


#  SECOND PART: THIS ANSWER ON THE BASIS OF TOTAL POINT EARNED  AS PRODUCT_ID

WITH CTE AS (WITH CTE AS 
				(SELECT D.*, CASE WHEN PRODUCT_ID = 1 THEN 5 WHEN PRODUCT_ID = 2 THEN 2 WHEN PRODUCT_ID = 3 THEN 5 ELSE 0 END AS POINTS FROM
				(SELECT C.USER_ID,C.PRODUCT_ID,SUM(PRICE) AMT FROM
					(SELECT A.*,B.PRICE FROM SALES A INNER JOIN PRODUCT B ON A.PRODUCT_ID = B.PRODUCT_ID) C 
					GROUP BY USER_ID,PRODUCT_ID) D)
				SELECT *,ROUND(AMT/POINTS) TOTAL_POINTS FROM CTE)
SELECT PRODUCT_ID,SUM(TOTAL_POINTS) TOTAL_POINTS_EARNED FROM CTE GROUP BY PRODUCT_ID ORDER BY TOTAL_POINTS_EARNED DESC LIMIT 1;



/* Q10) In this first one year after a customer joins the gold program (including their join date) irrespecive of what the customer has purchased they earn 5 
    zomato points every 10 rs spent who earnedmore 1 or 3 andwhat was thier points earnings in thier first yr?  
    
   OUR UNDERSTANDING:  1ZP =2RS
                      0.5 ZP = 1RS  */
  
 SELECT C.*,D.PRICE * 0.5 TOTAL_POINTS_EARNED FROM 
(SELECT A.USER_ID,A.CREATED_DATE,A.PRODUCT_ID, B.GOLD_SIGNUP_DATE FROM SALES A INNER JOIN 
goldusers_signup B ON A.USER_ID = B.USER_ID AND CREATED_DATE >= GOLD_SIGNUP_DATE AND CREATED_DATE <=  DATE_ADD(GOLD_SIGNUP_DATE, INTERVAL 1 YEAR))C
INNER JOIN  PRODUCT D ON C.PRODUCT_ID  = D.PRODUCT_ID;



# Q11) rnk all the transaction of the customers?
SELECT * , RANK() OVER(PARTITION BY USER_ID ORDER BY CREATED_DATE)rnk FROM SALES;



# Q12) Rank all the transactions for each member whenver they are zomato gold member for every non gold member transcation mark as na

WITH CTE AS 
		(SELECT A.USER_ID,A.CREATED_DATE,A.PRODUCT_ID, B.GOLD_SIGNUP_DATE FROM SALES A LEFT JOIN GOLDUSERS_SIGNUP B
		ON A.USER_ID = B.USER_ID AND CREATED_DATE >= GOLD_SIGNUP_DATE)
SELECT * , CASE WHEN 
				GOLD_SIGNuP_DATE IS NULL THEN  'NA' ELSE RANK() OVER(PARTITION BY USER_ID ORDER BY CREATED_DATE DESC) 
                END AS RNK 
FROM CTE;